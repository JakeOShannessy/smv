name: Smokeview
on: push
env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18418/w_BaseKit_p_2022.1.0.116_offline.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18417/w_HPCKit_p_2022.1.0.93_offline.exe
  LINUX_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18445/l_BaseKit_p_2022.1.1.119_offline.sh
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18438/l_HPCKit_p_2022.1.1.97_offline.sh
  MACOS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18341/m_HPCKit_p_2022.1.0.86_offline.dmg
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-compiler
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.dpcpp-compiler
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_DPCPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp
  LINUX_CPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler-pro
  LINUX_FORTRAN_COMPONENTS_WEB: intel.oneapi.lin.ifort-compiler
  LINUX_DPCPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler
  MACOS_CPP_COMPONENTS: intel.oneapi.mac.cpp-compiler
  MACOS_FORTRAN_COMPONENTS: intel.oneapi.mac.ifort-compiler

jobs:
  build-macos:
    name: Build Smokeview MacOS
    strategy:
      fail-fast: false
      matrix:
        lua: [lua, no-lua]
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        shell: bash
        env:
          PLATFORM: ${{ matrix.os }}
          LUA: ${{ matrix.lua }}
        run: |
          brew install gcc
          brew reinstall gcc
          cp /usr/local/Cellar/gcc/11.2.0_03/lib/gcc/11/libgfortran* Build/LIBS/gnu_osx_64
          pushd Build/smokeview/gnu_osx_64
          if [[ "$LUA" == "lua" ]]; then
            ./make_smokeview_lua.sh
          else
            ./make_smokeview.sh
          fi
          popd
          cp Build/smokeview/gnu_osx_64/smokeview_osx_64 smokeview
      - name: Set exec suffix
        if: ${{ matrix.lua == "lua" }}
        run: echo "exec_suffix=-lua" >> $GITHUB_ENV
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: smokeview-macos-${{ env.exec_suffix }}
          path: smokeview

  build-linux:
    name: Build Smokeview Linux
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        lua: [lua, no-lua]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        shell: bash
        env:
          PLATFORM: ${{ matrix.os }}
          LUA: ${{ matrix.lua }}
        run: |
          sudo apt-get install build-essential gfortran freeglut3-dev libx11-dev libxmu-dev libxi-dev
          pushd Build/smokeview/gnu_linux_64
          if [[ "$LUA" == "lua" ]]; then
            ./make_smokeview_lua.sh
          else
            ./make_smokeview.sh
          fi
          popd
          cp Build/smokeview/gnu_linux_64/smokeview_linux_64 smokeview
      - name: Set exec suffix
        if: ${{ matrix.lua == "lua" }}
        run: echo "exec_suffix=-lua" >> $GITHUB_ENV
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: smokeview-linux-${{ env.exec_suffix }}
          path: smokeview

  build-windows:
    name: Build Smokeview Windows
    strategy:
      fail-fast: false
      matrix:
        lua: [lua, no-lua]
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: cache install cpp
        id: cache-install-cpp
        uses: actions/cache@v2
        with:
          path: C:\Program Files (x86)\Intel\oneAPI\compiler
          key: install-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_CPP_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
      - name: install cpp
        if: steps.cache-install-cpp.outputs.cache-hit != 'true'
        run: scripts/install_windows_oneapi.bat $WINDOWS_HPCKIT_URL $WINDOWS_CPP_COMPONENTS $WINDOWS_FORTRAN_COMPONENTS
      - name: build smokeview
        shell: cmd
        env:
          LUA: ${{ matrix.lua }}
        run: |
          scripts\setup_windows_oneapi.bat ""
          pushd Build/smokeview/intel_win_64
          if [[ "$LUA" == "lua" ]]; then
            make -j 4 pp_WIN_ONEAPI=1 LUA_SCRIPTING="true" -f ../Makefile intel_win_64
          else
            make -j 4 pp_WIN_ONEAPI=1 -f ../Makefile intel_win_64
          fi
          popd
          copy Build\smokeview\intel_win_64\smokeview_win_64 smokeview
      - name: Set exec suffix
        if: ${{ matrix.lua == "lua" }}
        run: echo "exec_suffix=-lua" >> $GITHUB_ENV
      - name: exclude unused files from cache
        if: steps.cache-install.outputs.cache-hit != 'true'
        shell: bash
        run: scripts/cache_exclude_windows.sh
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: smokeview-windows-${{ env.exec_suffix }}
          path: smokeview
