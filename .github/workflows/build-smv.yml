name: Smokeview
on: push
env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18418/w_BaseKit_p_2022.1.0.116_offline.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18417/w_HPCKit_p_2022.1.0.93_offline.exe
  LINUX_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18445/l_BaseKit_p_2022.1.1.119_offline.sh
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18438/l_HPCKit_p_2022.1.1.97_offline.sh
  MACOS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18341/m_HPCKit_p_2022.1.0.86_offline.dmg
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-compiler
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.dpcpp-compiler
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_DPCPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp
  LINUX_CPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler-pro
  LINUX_FORTRAN_COMPONENTS_WEB: intel.oneapi.lin.ifort-compiler
  LINUX_DPCPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler
  MACOS_CPP_COMPONENTS: intel.oneapi.mac.cpp-compiler
  MACOS_FORTRAN_COMPONENTS: intel.oneapi.mac.ifort-compiler
jobs:
  build:
    name: Build Smokeview Linux
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        lua: [true,false]
        # os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        shell: bash
        env:
          PLATFORM: ${{ matrix.os }}
          LUA: ${{ matrix.lua }}
        run: |
          if [[ "$PLATFORM" == "macos-latest" ]]; then
            brew install gcc
            brew reinstall gcc
            ls /usr/local/Cellar/gcc/10.2.0/lib/gcc/10/*
            cp /usr/local/Cellar/gcc/10.2.0/lib/gcc/10/libgfortran* Build/LIBS/gnu_osx_64
            pushd Build/smokeview/gnu_osx_64
            if [[ "$LUA" == true ]]; then
              ./make_smokeview_lua.sh
            else
              ./make_smokeview.sh
            fi
            popd
            cp Build/smokeview/gnu_osx_64/smokeview_osx_64 smokeview
          fi
          if [[ "$PLATFORM" == "ubuntu-latest" ]]; then
            sudo apt-get install build-essential gfortran freeglut3-dev libx11-dev libxmu-dev libxi-dev
            pushd Build/smokeview/gnu_linux_64
            if [[ "$LUA" == true ]]; then
              ./make_smokeview_lua.sh
            else
              ./make_smokeview.sh
            fi
            popd
            cp Build/smokeview/gnu_linux_64/smokeview_linux_64 smokeview
          fi
          if [[ "$PLATFORM" == "windows-latest" ]]; then
            choco install make
            pushd Build/smokeview/intel_win_64
            if [[ "$LUA" == true ]]; then
              ./make_smokeview_lua.bat
            else
              ./make_smokeview.bat
            fi
            popd
            cp Build/smokeview/mingw_win_64/smokeview_mingw_64 smokeview
          fi
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: smokeview
          path: smokeview
   build-windows:
    name: Build Smokeview Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install cpp
      id: cache-install
      uses: actions/cache@v2
      with:
        path: C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_CPP_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
    - name: install cpp
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows_oneapi.bat $WINDOWS_HPCKIT_URL $WINDOWS_CPP_COMPONENTS
    - name: cache install fortran
      id: cache-install
      uses: actions/cache@v2
      with:
        path: C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_FORTRAN_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
    - name: install fortran
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows_oneapi.bat $WINDOWS_HPCKIT_URL $WINDOWS_FORTRAN_COMPONENTS

    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      shell: bash
      run: scripts/cache_exclude_windows.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7
